!function (a) { var b = {}; b.getId = function () { var b = a(document).data("icolorID"); return b ? b += 1 : b = 1, a(document).data("icolorID", b), b }, b.colorMap = ["00", "33", "66", "99", "AA", "CC", "EE", "FF"], b.M = function (a, b) { this.$t = a, this.$layout = null, this.$colors = null, this.$tb = null, this.flat = b.flat, this.colors = b.colors, this.trigger = b.trigger, this.className = b.cl, this.showInput = b.showInput, this.defaultColor = !(this.colors && this.colors.length > 0), this.curColor = "", this._opts = b, this._init() }, b.M.prototype = { _init: function () { this._initColors(), this._initCbk(), this._initLayout() }, _initColors: function () { var a; if (this.defaultColor) { for (a = 0; a < b.colorMap.length; a++) this.colors.push(b.colorMap[a] + b.colorMap[a] + b.colorMap[a]); for (a = 1; a < b.colorMap.length; a++) 4 != a && 6 != a && this.colors.push(b.colorMap[0] + b.colorMap[0] + b.colorMap[a]); for (a = 1; a < b.colorMap.length; a++) 2 != a && 4 != a && 6 != a && 7 != a && this.colors.push(b.colorMap[a] + b.colorMap[a] + b.colorMap[7]); for (a = 1; a < b.colorMap.length; a++) 4 != a && 6 != a && this.colors.push(b.colorMap[0] + b.colorMap[a] + b.colorMap[0]); for (a = 1; a < b.colorMap.length; a++) 2 != a && 4 != a && 6 != a && 7 != a && this.colors.push(b.colorMap[a] + b.colorMap[7] + b.colorMap[a]); for (a = 1; a < b.colorMap.length; a++) 4 != a && 6 != a && this.colors.push(b.colorMap[a] + b.colorMap[0] + b.colorMap[0]); for (a = 1; a < b.colorMap.length; a++) 2 != a && 4 != a && 6 != a && 7 != a && this.colors.push(b.colorMap[7] + b.colorMap[a] + b.colorMap[a]); for (a = 1; a < b.colorMap.length; a++) 4 != a && 6 != a && this.colors.push(b.colorMap[a] + b.colorMap[a] + b.colorMap[0]); for (a = 1; a < b.colorMap.length; a++) 2 != a && 4 != a && 6 != a && 7 != a && this.colors.push(b.colorMap[7] + b.colorMap[7] + b.colorMap[a]); for (a = 1; a < b.colorMap.length; a++) 4 != a && 6 != a && this.colors.push(b.colorMap[0] + b.colorMap[a] + b.colorMap[a]); for (a = 1; a < b.colorMap.length; a++) 2 != a && 4 != a && 6 != a && 7 != a && this.colors.push(b.colorMap[a] + b.colorMap[7] + b.colorMap[7]); for (a = 1; a < b.colorMap.length; a++) 4 != a && 6 != a && this.colors.push(b.colorMap[a] + b.colorMap[0] + b.colorMap[a]); for (a = 1; a < b.colorMap.length; a++) 2 != a && 4 != a && 6 != a && 7 != a && this.colors.push(b.colorMap[7] + b.colorMap[a] + b.colorMap[7]) } }, _initLayout: function () { var e, f, g, h, c = this, d = !0; if (this._opts.beforeInit && (d = this._opts.beforeInit()), d) { for (this._opts.col = this._opts.col || this.colors.length, e = this.defaultColor ? 8 : this._opts.col < 1 ? 1 : this._opts.col, f = '<div class="' + this.className + '" id="icolor_' + b.getId() + '">', g = "", f += '<table class="icolor_ct">', h = 0; h < this.colors.length; h++) 0 == h % e && (f += "<tr>"), g = this._opts.title ? ' title="#' + this.colors[h] + '"' : "", f += '<td style="background-color:#' + this.colors[h] + ';"' + g + ' abbr="' + this.colors[h] + '"></td>', h % e == e - 1 && (f += "</tr>"); f += "</table>", this.showInput && (f += '<div class="icolor_ft"><input type="text" name="icolor" class="icolor_tbx"/>' + this._opts.okTpl + "</div>"), f += "</div>", this.$layout = a(f), this.$tb = this.$layout.find("table"), this.$colors = this.$tb.find("td"), this.flat ? this.$t.append(this.$layout.addClass("icolor_flat")) : a("body").append(this.$layout.hide()), this.$colors.click(function () { "hot" != this.className && (c.$colors.removeClass(), a(this).addClass("hot"), c.curColor = "#" + this.abbr, c._$ipt && c._$ipt.val(c.curColor), c.submit()) }), this.showInput && (this._$ipt = this.$layout.find(".icolor_tbx").keyup(function (a) { if (13 == a.keyCode) { var b = ""; "" != (b = c._$ipt.val()) && 0 == b.indexOf("#") && (c.curColor = b, c.submit()) } }), this.$layout.find(".icolor_ok").click(function () { var b = ""; return "" == (b = c._$ipt.val()) || 0 != b.indexOf("#") ? !1 : (c.curColor = b, c.submit(), !1) })), this.flat || this.$t.bind(this.trigger, function () { return c.$layout.is(":hidden") ? c.show() : c.$layout.hide(), !1 }), this._opts.afterInit && this._opts.afterInit() } }, show: function () { var a = this, b = this.$t.offset(), c = this._opts.onShow ? function () { a._opts.onShow(b) } : null; this.$layout.css({ left: b.left, top: b.top + this.$t.height() }), this._opts.slide ? this.$layout.slideDown("fast", c) : this.$layout.show(0, c) }, submit: function () { this._opts.onSelect && this._opts.onSelect(this.curColor), !this.flat && this._opts.autoClose && this.$layout.hide() }, _proxy: function (a) { if (!a) return null; var b = this; return function () { return a.apply(b, arguments) } }, _initCbk: function () { this._opts.onShow = this._proxy(this._opts.onShow), this._opts.onSelect = this._proxy(this._opts.onSelect), this._opts.beforeInit = this._proxy(this._opts.beforeInit), this._opts.afterInit = this._proxy(this._opts.afterInit), this._opts.onOver = this._proxy(this._opts.onOver), this._opts.onOut = this._proxy(this._opts.onOut) } }, a.fn.icolor = function (c) { return c = a.extend({}, a.fn.icolor.defaults, c), this.each(function () { var d = a(this); d.data("icolor") || d.data("icolor", new b.M(d, c)) }) }, a.fn.icolor.defaults = { trigger: "click", flat: !1, col: 8, colors: [], showInput: !1, cl: "icolor", title: !0, autoClose: !0, slide: !0, okTpl: "", onShow: null, onSelect: null, beforeInit: null, afterInit: null, onOver: null, onOut: null, hover: !0 }, a.fn.icolor.isDark = function (a) { var b = parseInt(a.substr(1), 16); return 500 > (b >>> 16) + (255 & b >>> 8) + (255 & b) } } (jQuery);